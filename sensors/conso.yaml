template:
  - sensor:
      - name: "Lampe Salon"
        unique_id: "lampe_salon"
        device_class: power
        state_class: measurement
        unit_of_measurement: W
        state: "{% if is_state('input_boolean.prise_salon', 'on') -%} 15 {%- else -%} 0 {%- endif %}"

      - name: "Prises RDC"
        unique_id: "prises_rdc"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{
          (float(states('sensor.em06_c1_power'),0)
          + float(states('sensor.mesureur_n1_puissance_b'),0)
          - float(states('sensor.lampe_salon'),0)
          - float(states('sensor.prise_tv_puissance'),0)
          - float(states('sensor.prise_lave_vaiselle_local_puissance'),0)
          - float(states('sensor.prise_zigbee_3_power'),0)
          ) | round(1) }}"

      - name: "mesureur_n1_puissance_b" #Entité gardée pour historique
        unique_id: "mesureur_n1_puissance_b"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if (float(states('sensor.mesureur_n1_local_puissance_b'),0) - float(states('sensor.prise_lave_linge_local_puissance'),0)) <= 0 -%} 25.0 {%- else -%}  {{ (float(states('sensor.mesureur_n1_local_puissance_b'),0) - float(states('sensor.prise_lave_linge_local_puissance'),0)) | round(1) }} {%- endif %}"

      - name: "disjoncteur_3" #Entité gardée pour historique
        unique_id: "disjoncteur_3"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: "kWh"
        state: "{% if float(states('sensor.disjoncteur_3_energie'),0) | round(1)==0 %} {{ float(states('sensor.disjoncteur_3_energie'),0) }} {%- else -%} {{ float(states('sensor.disjoncteur_3_energie'),0) * 0.975 | round(2) }} {%- endif %}"

      - name: "disjoncteur_4" #Entité gardée pour historique
        unique_id: "disjoncteur_4"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: "kWh"
        state: "{% if float(states('sensor.disjoncteur_4_energie'),0) | round(1)==0 %} {{ float(states('sensor.disjoncteur_4_energie'),0) }} {%- else -%} {{ float(states('sensor.disjoncteur_4_energie'),0) * 0.975 | round(2) }} {%- endif %}"

      - name: "mesureur_n1_puissance_a" #Entité gardée pour historique
        unique_id: "mesureur_n1_puissance_a"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.mesureur_n1_local_puissance_a'),0) | round(1)==0 %} 22.0 {%- else -%} {{ (float(states('sensor.mesureur_n1_local_puissance_a'),0))| round(1) }} {%- endif %}"

      - name: "Puissance socle"
        unique_id: "puissance_socle"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{
          (float(states('sensor.mesureur_n1_puissance_a'),0)
          + float(states('sensor.mesureur_n1_puissance_b'),0)
          + float(states('sensor.em06_a1_power'),0)
          + float(states('sensor.shelly_em0_power'),0)
          + float(states('sensor.prises_rdc'),0))
          | round(1) }}"

      - name: "Consommation non suivie"
        unique_id: "consommation_non_suivie"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.consommation_batterie'),0)<0 -%}
          {{ (float(states('sensor.consommation_generale'),0)
          - float(states('sensor.puissance_socle'),0)
          - float(states('sensor.consommation_suivie'),0)
          + float(states('sensor.consommation_batterie'),0))
          | round(1)}}
          {%- else -%}
          {{ (float(states('sensor.consommation_generale'),0)
          - float(states('sensor.puissance_socle'),0)
          - float(states('sensor.consommation_suivie'),0))
          | round(1)}}
          {%- endif %}"

      - name: "Consommation suivie"
        unique_id: "consommation_suivie"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{
          ( float(states('sensor.em06_a2_power'),0)
          + float(states('sensor.em06_b2_power'),0)
          + float(states('sensor.em06_c2_power'),0)
          + float(states('sensor.consommation_cumulus'),0)
          + float(states('sensor.consommation_borne'),0)
          + float(states('sensor.disjoncteur_3_puissance_2'),0)
          + float(states('sensor.disjoncteur_4_puissance_2'),0)
          + float(states('sensor.prise_frigo_local_puissance'),0)
          + float(states('sensor.prise_zigbee_3_power'),0)
          + float(states('sensor.prise_lave_vaiselle_local_puissance'),0)
          + float(states('sensor.prise_tv_puissance'),0)
          + float(states('sensor.lampe_salon'),0)
          + float(states('sensor.prise_lave_linge_local_puissance'),0)
          + float(states('sensor.bidirectional_energy_meter_power_a'),0)
          + float(states('sensor.bidirectional_energy_meter_power_b'),0)
          ) | round(0) }}"

      - name: "Conso mini"
        unique_id: "conso_mini"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_02_a2_power'),0) > 85 -%} {{float(states('sensor.em06_02_a2_power'),0)}} {%- else -%} 120.0 {%- endif %}"

      - name: "Consommation réseau Absolue"
        unique_id: "consommation_reseau"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_02_b1_power'),0) > 0 -%} {{ float(states('sensor.em06_02_b1_power'),0)}} {%- else -%} 0 {%- endif %}"

      - name: "Consommation Générale"
        unique_id: "consommation_generale"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.consommation_batterie'),0)>0 -%} {{float(states('sensor.consommation_maison'),0) + float(states('sensor.consommation_cumulus'),0) + float(states('sensor.consommation_borne'),0) }} {%- else -%} {{ float(states('sensor.consommation_maison'),0) - float(states('sensor.consommation_batterie'),0) + float(states('sensor.consommation_cumulus'),0) + float(states('sensor.consommation_borne'),0)}} {%- endif %}"

      - name: "Consommation Maison"
        unique_id: "consommation_maison"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{ (float(states('sensor.consommation_reseau'),0) + float(states('sensor.production_solaire'),0) - float(states('sensor.surplus_production'),0) - float(states('sensor.consommation_cumulus'),0) - float(states('sensor.consommation_borne'),0)- (-float(states('sensor.consommation_batterie'),0))) | abs | round(0)}}"

      - name: "Consommation Cumulus"
        unique_id: "consommation_cumulus"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_02_c1_power'),0)>=0 and float(states('sensor.em06_02_c1_power'),0)<10 -%} 0 {%- else -%} {{ float(states('sensor.em06_02_c1_power'),0)}} {%- endif %}"

      - name: "Consommation Batterie"
        unique_id: "consommation_batterie"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_02_b2_power'),0)<10 and float(states('sensor.em06_02_b2_power'),0)>-10 -%} 0 {%- else -%} {{ float(states('sensor.em06_02_b2_power'),0)}} {%- endif %}"

      - name: "Consommation Borne"
        unique_id: "consommation_borne"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_02_c2_power'),0)<10 and float(states('sensor.em06_02_c2_power'),0)>-10 -%} 0 {%- else -%} {{ float(states('sensor.em06_02_c2_power'),0)}} {%- endif %}"

      - name: "Consommation brute" # hors batterie et cumulus, somme de tous les capteurs possible (même si redondants)
        unique_id: "consommation_brute"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{
          ( float(states('sensor.em06_a1_power'),0)
          + float(states('sensor.em06_b1_power'),0)
          + float(states('sensor.em06_c1_power'),0)
          + float(states('sensor.em06_a2_power'),0)
          + float(states('sensor.em06_b2_power'),0)
          + float(states('sensor.em06_c2_power'),0)
          + float(states('sensor.disjoncteur_3_puissance_2'),0)
          + float(states('sensor.disjoncteur_4_puissance_2'),0)
          + float(states('sensor.prise_frigo_local_puissance'),0)
          + float(states('sensor.prise_lave_linge_local_puissance'),0)
          + float(states('sensor.prise_lave_vaisselle_local_puissance'),0)
          + float(states('sensor.prise_tv_local_puissance'),0)
          + float(states('sensor.prise_5_local_puissance'),0)
          + float(states('sensor.prise_zigbee_1_power'),0)
          + float(states('sensor.prise_zigbee_2_power'),0)
          + float(states('sensor.prise_zigbee_3_power'),0)
          + float(states('sensor.mesureur_n1_local_puissance_a'),0)
          + float(states('sensor.mesureur_n1_local_puissance_b'),0)
          + float(states('sensor.bidirectional_energy_meter_power_a'),0)
          + float(states('sensor.bidirectional_energy_meter_power_b'),0)
          ) | round(0) }}"
