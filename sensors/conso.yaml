template:
  - sensor:
      - name: "Lampe Salon"
        unique_id: "lampe_salon"
        device_class: power
        state_class: measurement
        unit_of_measurement: W
        state: "{% if is_state('input_boolean.prise_salon', 'on') -%} 5 {%- else -%} 0 {%- endif %}"

      - name: "Prises RDC"
        unique_id: "prises_rdc"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{ (float(states('sensor.em06_c1_power'),0) - float(states('sensor.lampe_salon'),0) - float(states('sensor.prise_tv_puissance'),0) - float(states('sensor.prise_lave_vaiselle_local_puissance'),0) - float(states('sensor.prise_5_local_puissance'),0)) | round(1) }}"

      - name: "mesureur_n1_puissance_b" #Entité gardée pour historique
        unique_id: "mesureur_n1_puissance_b"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if (float(states('sensor.mesureur_n1_local_puissance_b'),0) - float(states('sensor.prise_lave_linge_local_puissance'),0)) <= 0 -%} 25.0 {%- else -%}  {{ (float(states('sensor.mesureur_n1_local_puissance_b'),0) - float(states('sensor.prise_lave_linge_local_puissance'),0)) | round(1) }} {%- endif %}"

      - name: "disjoncteur_3" #Entité gardée pour historique
        unique_id: "disjoncteur_3"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: "kWh"
        state: "{% if float(states('sensor.disjoncteur_3_energie'),0) | round(1)==0 %} {{ float(states('sensor.disjoncteur_3_energie'),0) }} {%- else -%} {{ float(states('sensor.disjoncteur_3_energie'),0) * 0.975 | round(2) }} {%- endif %}"

      - name: "disjoncteur_4" #Entité gardée pour historique
        unique_id: "disjoncteur_4"
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: "kWh"
        state: "{% if float(states('sensor.disjoncteur_4_energie'),0) | round(1)==0 %} {{ float(states('sensor.disjoncteur_4_energie'),0) }} {%- else -%} {{ float(states('sensor.disjoncteur_4_energie'),0) * 0.95 | round(2) }} {%- endif %}"

      - name: "mesureur_n1_puissance_a" #Entité gardée pour historique
        unique_id: "mesureur_n1_puissance_a"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.mesureur_n1_local_puissance_a'),0) | round(1)==0 %} 22.0 {%- else -%} {{ (float(states('sensor.mesureur_n1_local_puissance_a'),0))| round(1) }} {%- endif %}"

      - name: "Puissance socle"
        unique_id: "puissance_socle"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{ (float(states('sensor.mesureur_n1_local_puissance_a'),0) + float(states('sensor.mesureur_n1_puissance_b'),0) + float(states('sensor.shelly_em0_power'),0) + float(states('sensor.em06_a1_power'),0) + float(states('sensor.prises_entree'),0) + float(states('sensor.prises_rdc'),0)) | round(1) }}"

      - name: "Consommation non suivie"
        unique_id: "consommation_non_suivie"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{
          (float(states('sensor.em06_b1_power'),0)
          - float(states('sensor.puissance_socle'),0)
          - float(states('sensor.puissance_suivie'),0)
          + float(states('sensor.prises_rdc'),0)
          ) | round(1) }}"

      - name: "Consommation suivie"
        unique_id: "consommation_suivie"
        device_class: power
        state_class: measurement
        unit_of_measurement: "W"
        state: "{{
          ( float(states('sensor.em06_c1_power'),0)
          - float(states('sensor.prises_rdc'),0)
          + float(states('sensor.em06_a2_power'),0)
          + float(states('sensor.em06_b2_power'),0)
          + float(states('sensor.em06_c2_power'),0)
          + float(states('sensor.cumulus_2'),0)
          + float(states('sensor.disjoncteur_3_puissance_2'),0)
          + float(states('sensor.disjoncteur_4_puissance_2'),0)
          + float(states('sensor.prise_frigo_local_puissance'),0)
          + float(states('sensor.prise_lave_linge_local_puissance'),0)
          + float(states('sensor.bidirectional_energy_meter_power_a'),0)
          + float(states('sensor.bidirectional_energy_meter_power_b'),0)
          ) | round(1) }}"

      - name: "Conso mini"
        unique_id: "conso_mini"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_b1_power'),0) > 85 -%} {{float(states('sensor.em06_b1_power'),0)}} {%- endif %}"

      - name: "Consommation réseau Absolue"
        unique_id: "consommation_reseau_abs"
        device_class: power # Exemples de valeurs possibles
        state_class: measurement
        unit_of_measurement: "W"
        state: "{% if float(states('sensor.em06_02_b1_power'),0) > 0 -%} {{ float(states('sensor.em06_02_b1_power'),0)}} {%- else -%} 0 {%- endif %}"

      - name: "Taux de chauffe ECS"
        unique_id: "taux_chauffe_ecs"
        unit_of_measurement: "%"
        device_class: power_factor # Exemples de valeurs possibles
        state_class: measurement # Exemples de valeurs possibles
        state: "{{ (100*(float(states('sensor.sonde_temperature_owon_temperature'),15) - float(states('input_number.tmin_ecs'),60) )/ (float(states('input_number.tmax_ecs'),60)-float(states('input_number.tmin_ecs'),15) ) )| round(0) }}"
