light:
  - platform: template
    lights:
      communication_batterie_led:
        friendly_name: "Communication Batterie LED"
        value_template: >
          {% set last = as_timestamp(states.sensor.esphome_web_a92940_marstek_ac_voltage.last_updated) %}
          {% set now_ts = now().timestamp() %}
          {{ (now_ts - last) < 30 }}
        turn_on:
          service: script.none
        turn_off:
          service: script.none
        level_template: 255
        color_template: >
          {% set last = as_timestamp(states.sensor.esphome_web_a92940_marstek_ac_voltage.last_updated) %}
          {% set now_ts = now().timestamp() %}
          {% if (now_ts - last) < 30 %}
            [0, 255, 0]
          {% else %}
            [255, 0, 0]
          {% endif %}

template:
  - sensor:
      - name: "SOC estimé batterie"
        unique_id: soc_estime_batterie
        unit_of_measurement: "%"
        device_class: battery
        state_class: measurement
        state: >
          {% set energie_actuelle = states('sensor.energie_estimee_batterie_dc') | float(0) %}
          {% set energie_reference = states('input_number.energie_batterie_a_100') | float(0) %}
          {% set capacite = 5.12 %}
          {% set soc = 100 + ((energie_actuelle - energie_reference) / capacite * 100) %}
          {{ soc | round(1) }}

      - name: "Energie restante Batterie"
        unique_id: energie_restante_batterie
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: measurement
        state: >
          {% set soc = states('sensor.soc_estime_batterie') | float(0) %}
          {% set capacite = 5.12 %}
          {% set energie_restante = soc * capacite / 100 %}
          {{ energie_restante | round(2) }}

      - name: LED Batterie
        unique_id: led_batterie_status
        state: "OK"
        attributes:
          rgb_color: "{{ state_attr('light.esphome_web_a92940_status_led', 'rgb_color') }}"

      - name: "Charge Marstek"
        state: "{{ (float(states('sensor.esphome_web_a92940_marstek_monthly_charging_energy'),0)) }}"
        unique_id: "charge_marstek"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing # Exemples de valeurs possibles

      - name: "Décharge Marstek"
        state: "{{ (float(states('sensor.esphome_web_a92940_marstek_monthly_discharging_energy'),0)) }}"
        unique_id: "decharge_marstek"
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: total_increasing # Exemples de valeurs possibles

      - name: "Charge Batterie"
        unique_id: "charge_batterie"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement
        state: >
          {% set power = states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) %}
          {% if power < 0 %}
            {{ power * -1 }}
          {% else %}
            0
          {% endif %}

      - name: "Décharge Batterie"
        unique_id: "decharge_batterie"
        unit_of_measurement: "W"
        device_class: power
        state_class: measurement
        state: >
          {% set power = states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) %}
          {% if power >= 0 %}
            {{ power }}
          {% else %}
            0
          {% endif %}

      - name: "Marstek Instant Efficiency"
        unique_id: "marstek_efficiency"
        unit_of_measurement: "%"
        #device_class: power
        state_class: measurement
        state: >
          {% set ac_power = states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) %}
          {% set battery_power = states('sensor.esphome_web_a92940_marstek_battery_power') | float(0) %}

          {% if battery_power != 0 and ac_power!=0 %}
            {% if states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) > 0 %}
              {% set ratio = -(ac_power / battery_power) * 100 %}
              {{ (max(min(ratio, 100), 0)) | int }}
            {% elif states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) < 0 %}
              {% set ratio = -(battery_power/ac_power) * 100 %}
              {{ (max(min(ratio, 100), 0)) | int }}
            {% else %}
            0
            {% endif %}
          {% else %}
            0
          {% endif %}
        icon: >
          {% if states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) > 0 %}
            mdi:battery-arrow-down
          {% elif states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) < 0 %}
            mdi:battery-arrow-up
          {% else %}
            mdi:battery-outline
          {% endif %}

      - name: "Estimation Temps Restant Batterie"
        unique_id: "batterie_temps_restant"
        state: >
          {% set inverter = states('sensor.esphome_web_a92940_marstek_inverter_state') %}
          {% set capacity_now = states('sensor.esphome_web_a92940_marstek_battery_remaining_capacity') | float(0) %}
          {% set soc = states('sensor.soc_estime_batterie') | float(0) %}
          {% set cutoff_charge_pct = states('number.esphome_web_a92940_marstek_charging_cutoff_capacity') | float(0) %}
          {% set cutoff_discharge_pct = states('number.esphome_web_a92940_marstek_discharging_cutoff_capacity') | float(0) %}

          {% set power = 0.0 %}
          {% if inverter == 'Charge' %}
            {% set power = states('sensor.batterie_charge_moyenne') | float(0) * -1 %}
          {% elif inverter == 'Discharge' %}
            {% set power = states('sensor.batterie_decharge_moyenne') | float(0) %}
          {% endif %}
          {% if power == 0 or soc == 0 %}
            temps indéterminé
          {% else %}
            {% set capacity_total = capacity_now / (soc / 100) %}
            {% set cutoff_charge_kwh = capacity_total * (cutoff_charge_pct / 100) %}
            {% set cutoff_discharge_kwh = capacity_total * (cutoff_discharge_pct / 100) %}

            {% if power > 0 %}
              {% set to_discharge = capacity_now - cutoff_discharge_kwh %}
              {% set heures = ((to_discharge * 1000) / power) | int %}
              {% set minutes = ((((to_discharge * 1000) / power) - heures) * 60) | round(0) %}
              Décharge – vide dans {{ heures }}h{{ minutes|int }}min
            {% elif power < 0 %}
              {% set to_charge = cutoff_charge_kwh - capacity_now %}
              {% set heures = ((to_charge * 1000) / (power | abs)) | int %}
              {% set minutes = ((((to_charge * 1000) / (power | abs)) - heures) * 60) | round(0) %}
              Charge – pleine dans {{ heures }}h{{ minutes|int }}min
            {% else %}
              En attente
            {% endif %}
          {% endif %}
        icon: >
          {% if states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) > 0 %}
            mdi:battery-arrow-down
          {% elif states('sensor.esphome_web_a92940_marstek_ac_power') | float(0) < 0 %}
            mdi:battery-charging
          {% else %}
            mdi:battery-outline
          {% endif %}
