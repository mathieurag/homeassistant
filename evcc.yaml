network:
  port: 7070

log: debug

interval: 3s

mqtt:
  broker: 192.168.68.112 # IP ou nom d’hôte de ton broker MQTT
  user: mqtt # (optionnel) si MQTT nécessite un login
  password: mqtt # (optionnel)
  topic: evcc # Préfixe utilisé par EVCC pour publier ses données

meters:
  - name: my_grid
    type: custom
    power:
      source: mqtt
      topic: ha2evcc/sensor/em06_02_b1_power/state

  # replace with your real pv system
  - name: my_pv
    type: custom
    power:
      source: mqtt
      topic: ha2evcc/sensor/production_solaire/state

  # replace with your real battery
  - name: my_battery
    type: custom
    power:
      source: mqtt
      topic: ha2evcc/sensor/consommation_batterie/state
    soc:
      source: mqtt
      topic: ha2evcc/sensor/soc_estime_batterie/state

  - name: my_home
    type: custom
    power:
      source: mqtt
      topic: ha2evcc/sensor/consommation_maison/state

  - name: my_cumulus
    type: custom
    power:
      source: mqtt
      topic: ha2evcc/sensor/consommation_cumulus/state

  - name: my_borne
    type: custom
    power:
      source: mqtt
      topic: ha2evcc/sensor/consommation_borne/state

vehicles:
  - name: vehicle_1
    title: Skoda ENYAQ 85 (manual)
    type: custom
    capacity: 77

  - name: my_car
    type: template
    template: enyaq
    user: matrag@gmail.com
    password: Celipo14
    vin:
    title: ENYAQ 85 (auto)
    capacity: 73

chargers:
  - name: my_charger
    type: custom
    status:
      source: mqtt
      topic: ha2evcc/charger/status # Valeurs : A, B, C
    enabled: # <- état actuel (lu)
      source: mqtt
      topic: ha2evcc/charger/enabled # Valeur "true" ou "false"
    enable: # <- commande (envoyée)
      source: mqtt
      topic: ha2evcc/charger/enable/set # EVCC publiera ici "true" ou "false"
    power:
      source: mqtt
      topic: ha2evcc/sensor/consommation_borne/state # en watts
    maxcurrent:
      source: mqtt
      topic: ha2evcc/charger/maxcurrent/set

  - name: ECS
    type: custom
    icon: waterheater
    integrateddevice: true
    heating: true
    status:
      source: mqtt
      topic: ha2evcc/charger/status # Valeurs : A, B, C
    enabled: # <- état actuel (lu)
      source: mqtt
      topic: ha2evcc/charger/enabled # Valeur "true" ou "false"
    enable: # <- commande (envoyée)
      source: mqtt
      topic: ha2evcc/charger/enable/set # EVCC publiera ici "true" ou "false"
    power:
      source: mqtt
      topic: ha2evcc/sensor/consommation_cumulus/state # en watts
    maxcurrent:
      source: mqtt
      topic: ha2evcc/charger/maxcurrent/set
    powersource:
      source: mqtt
      topic: ha2evcc/sensor/consommation_cumulus/state # en watts
    tempsource:
      source: mqtt
      topic: ha2evcc/sensor/consommation_cumulus/state # en watts
site:
  title: Test
  meters:
    grid: my_grid
    pv: my_pv
    battery: my_battery
    aux:
      - my_home
      - my_cumulus
      - my_borne

loadpoints:
  - title: Garage1
    charger: my_charger
    mode: pv
    meter:
    vehicle: vehicle_1

tariffs:
  currency: EUR # three letter ISO-4217 currency code (default EUR)
  grid:
    type: template
    template: energy-charts-api # epex spot market prices
    bzn: FR
    charges: 0.20
  feedin:
    type: fixed
    price: 0.129 # EUR/kWh
